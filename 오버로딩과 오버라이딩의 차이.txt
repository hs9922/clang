자바에서 오버로딩(Overloading)과 오버라이딩(Overriding)은 모두 메소드와 관련된 개념이지만, 서로 다른 목적과 방식으로 사용됩니다.

오버로딩 (Overloading)
정의: 오버로딩은 같은 이름의 메소드를 여러 개 정의하되, 매개변수의 유형이나 개수를 다르게 하는 것을 말합니다.

특징:

같은 클래스 내에서 발생합니다.
매개변수의 수나 타입이 다릅니다.
반환 타입은 다를 수도 있고 같을 수도 있지만, 반환 타입만 다른 경우는 오버로딩이 아닙니다.
컴파일 타임에 결정됩니다.
예시:

java
코드 복사
class MathUtils {
    // int 타입 두 개를 더하는 메소드
    public int add(int a, int b) {
        return a + b;
    }

    // double 타입 두 개를 더하는 메소드
    public double add(double a, double b) {
        return a + b;
    }

    // int 타입 세 개를 더하는 메소드
    public int add(int a, int b, int c) {
        return a + b + c;
    }
}
여기서 add 메소드는 서로 다른 매개변수를 가지고 여러 번 정의되었습니다.

오버라이딩 (Overriding)
정의: 오버라이딩은 부모 클래스의 메소드를 자식 클래스에서 재정의하는 것을 말합니다.

특징:

상속 관계에서 발생합니다.
부모 클래스의 메소드와 같은 이름, 같은 매개변수, 같은 반환 타입을 가집니다.
접근 제한자는 부모 메소드보다 더 강하게 만들 수 없습니다 (예: 부모 메소드가 public이면 자식 메소드도 public이어야 함).
런타임에 결정됩니다.
예시:

java
코드 복사
class Animal {
    // 부모 클래스의 메소드
    public void makeSound() {
        System.out.println("Some sound");
    }
}

class Dog extends Animal {
    // 자식 클래스에서 메소드를 재정의
    @Override
    public void makeSound() {
        System.out.println("Bark");
    }
}
여기서 makeSound 메소드는 Animal 클래스에서 정의된 메소드를 Dog 클래스에서 재정의했습니다.

요약
오버로딩: 같은 클래스 내에서 같은 이름의 메소드를 여러 번 정의하되, 매개변수의 유형이나 개수를 다르게 함.
오버라이딩: 상속 관계에서 부모 클래스의 메소드를 자식 클래스에서 재정의함.
두 개념 모두 자바에서 다형성(polymorphism)을 구현하는 중요한 방법입니다.